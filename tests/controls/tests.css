@charset "UTF-8";
/**
* Prints classes for supported or unsupported features
* ---
* @access private
* ---
* @param {Bool}      $supports   - Whether to check for supported features or not
* @param {ArgList}   $features   - List of features
* ---
* @throws `$feature` is not a `string` for `modernizr`
*/
/**
* Prints classes for supported features
* ---
* @requires modernizr
* ---
* @access public
* ---
* @param {ArgList} $features   - List of features
* ---
* @example scss
* .my-selector { @include yep(opacity, csstransforms) { // ... } }
*/
/**
* Nope “alias”
* Prints classes for unsupported features and lack of JS
* ---
* @requires modernizr
* ---
* @access public
* ---
* @param {ArgList} $features - List of features
* ---
* @example scss
* .my-selector { @include nope(opacity, csstransforms) { // ... } }
*/
.opacity .modernizr-single-supports {
  test: ok;
}

.opacity.csstransforms .modernizr-multi-supports {
  test: ok;
}

.no-js .modernizr-single-supports-false, .no-opacity .modernizr-single-supports-false {
  test: ok;
}

.no-js .modernizr-multi-supports-false, .no-opacity .modernizr-multi-supports-false, .no-csstransforms .modernizr-multi-supports-false {
  test: ok;
}

.opacity .yep-single {
  test: ok;
}

.opacity.csstransforms .yep-multi {
  test: ok;
}

.no-js .nope-single, .no-opacity .nope-single {
  test: ok;
}

.no-js .nope-multi, .no-opacity .nope-multi, .no-csstransforms .nope-multi {
  test: ok;
}
